name: CI

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - 'rustfmt.toml'
      - 'config/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - 'rustfmt.toml'
      - 'config/**'
      - '.github/workflows/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  ci:
    name: ${{ matrix.os }}-${{ matrix.toolchain }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # windows-latest
        toolchain: [nightly-2024-12-01, nightly]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./rusty_ex
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        run: rustup toolchain install ${{ matrix.toolchain }}
      - name: Set default toolchain
        run: rustup default ${{ matrix.toolchain }}
      - name: Install rustc-src
        run: rustup component add --toolchain ${{ matrix.toolchain }} rust-src
      - name: Install rustc-dev
        run: rustup component add --toolchain ${{ matrix.toolchain }} rustc-dev
      - name: Install llvm-tools-preview
        run: rustup component add --toolchain ${{ matrix.toolchain }} llvm-tools-preview
      - name: Add clippy
        run: rustup component add --toolchain ${{ matrix.toolchain }} clippy
      - name: Add rustfmt
        run: rustup component add --toolchain ${{ matrix.toolchain }} rustfmt
      - name: Run cargo build
        run: cargo build --verbose
      - name: Run cargo test
        run: cargo test --verbose --no-fail-fast -- --exact --test-threads=1 --nocapture
      - name: Run cargo clippy
        run: cargo clippy --verbose
      - name: Run cargo fmt
        run: cargo fmt -- --check

